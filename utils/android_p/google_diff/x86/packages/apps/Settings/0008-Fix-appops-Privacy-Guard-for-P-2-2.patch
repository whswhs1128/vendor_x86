From a265378490f81b743fbc50359f5149cde5fa9ccf Mon Sep 17 00:00:00 2001
From: Bruno Martins <bgcngm@gmail.com>
Date: Mon, 4 Dec 2017 13:30:16 +0000
Subject: [PATCH 2/4] Fix appops: Privacy Guard for P (2/2)

This had been partially split into CMParts, now LineageParts.
The AppOps functionality still lives here.

Squash of the following changes, adapted to the Lineage SDK:

    Author: Steve Kondik <shade@chemlab.org>
    Date:   Tue Feb 25 14:02:16 2014 +0100

        settings: Relocate Privacy Guard icons to framework

        * So we can use them in the permission dialog for MODE_ASK

        Change-Id: Ia9bac7dff0bbe91ae48db5d4b0d8f46feb9fdf86

    Author: DvTonder <david.vantonder@gmail.com>
    Date:   Thu Jan 16 19:01:23 2014 -0500

        Settings: Fix up top level "Privacy" section

        Change-Id: Id4dbda10a891c793bc6eb3c42807cc0e3f6092cc

    Author: Danny Baumann <dannybaumann@web.de>
    Date:   Fri Nov 8 13:37:07 2013 +0100

        Add back privacy guard manager.

        Change-Id: Ic9fbbae137bb8425fe72a6cdb2f17117351b5709

    Author: Chirayu Desai <cdesai@cyanogenmod.org>
    Date:   Sat Dec 28 18:51:46 2013 +0530

        PrivacyGuard: Specify a default value in Settings.getInt method call

        * While privacy guard is enabled by default, the default value specified
          here is returned only when the setting is not defined or not an integer.

        Change-Id: Iaedffcc76a23a310aa7915f6a42ccce83ba5d2a6

    Author: Matt Mower <mowerm@gmail.com>
    Date:   Wed Feb 5 19:40:37 2014 -0600

        PrivacyGuard: confirm permissions reset

        The button to reset all application permissions to enabled looks
        suspiciously like a refresh button. Prompt the user with a confirmation
        dialog to make sure they know what they've pressed.

        Change-Id: I0444c5bf8e9533feccf890055d34d3200609c6f6

    Author: Diogo Ferreira <defer@cyngn.com>
    Date:   Wed Dec 17 11:56:22 2014 +0000

        su: Add Root access app-ops control

        Adds an app-ops option for root access.

        Platform-signed apps weren't previously being listed but there are some
        that use root access (FileManager comes to mind).

        So we list all of them, but for platform-signed apps we only show the
        root toggle and none of the permission-based ones.

        Change-Id: Ie716974156d55eb66061e78dc39505569e5bdc2a

    Author: Shashank Mittal <mittals@codeaurora.org>
    Date:   Thu Sep 5 19:01:47 2013 -0700

        AppOps: Add more operations in app ops settings.

        Add following operations in app ops settings.

        -- Wifi enable/disable
        -- Bluetooth enable/disable

        Change-Id: I32183d77b88c326168557444a445765b5a69de6f

        AppOps: Add support for nfc operation

        Add support for nfc operation

        Change-Id: I0ca617b11d3f65f80cc49c3f629312e2fee1ba91

        AppOps: Add mobile data-on permission control.

        Add mobile data-on permission control.

        Change-Id: I0956fb1575addb5f4e522e664a80442120190b86

    Author: Michael Bestas <mikeioannina@gmail.com>
    Date:   Sat Mar 8 03:18:34 2014 +0200

        Settings: Convert AppOps array items to string references

        * Avoid future breakage
         This will need conversion of all AOSP translated arrays to strings

        Change-Id: I2e52e4013d1232d529ce5b9e3aae3502c42e938a

    Author: Shashank Mittal <mittals@codeaurora.org>
    Date:   Thu Mar 6 17:16:49 2014 -0800

        AppOps: Add 'Always ask' option under appOps setting.

        Add always ask option for each operation.

        Change-Id: Ia4f331a5b7d0b1c8ae6946c55a4f78818fe0454f

    Author: Shashank Mittal <mittals@codeaurora.org>
    Date:   Fri Aug 1 13:05:35 2014 -0700

        AppOps: Use switch widget for non-strict ops.

        There are few Ops for which 'Always Ask' mode is not allwoed.
        So use switch widget to control such Ops.

        Change-Id: Ic7464a207c00e4cb9efff57c1f060e04379c1ee7

    Author: Chirayu Desai <cdesai@cyanogenmod.org>
    Date:   Mon Dec 7 14:07:11 2015 -0800

        Allow disabling the privacy guard notification - port from cm-12.1 (1/3)

        Change-Id: Iebf4545c1a65b10036a4865bae29d14e86b12d07

    Author: Roman Birg <roman@cyngn.com>
    Date:   Mon Nov 2 17:34:00 2015 -0800

        Fix advanced privacy guard screen

        Change-Id: I1064f2df748b21384f53219b87645f1569f595d5
        Signed-off-by: Roman Birg <roman@cyngn.com>

    Author: Sam Mortimer <sam@mortimer.me.uk>
    Date:   Thu Oct 3 13:51:31 2013 -0700

        AppOps: menu options to show/hide user and system apps

        Change-Id: Ia55364c361db949a891e4b53a757ee4dff519eb6

    Author: Danny Baumann <dannybaumann@web.de>
    Date:   Wed Oct 2 22:24:14 2013 -0700

        [1/2] AppOps: Show allowed/ignored counts

        Change-Id: Ia27737155c33e934df9a2a1fcff88379240fd096

    Author: Sam Mortimer <sam@mortimer.me.uk>
    Date:   Sun Dec 1 21:39:07 2013 -0800

        AppOps: only apply app type filters to summary screen

        *) If buildState() is called for a single package, do
           not apply hide user/system app filters.
        *) Fixes show detail display when called via
           long press in privacyguard and an AppOp hide
           filter is ticked.

        Change-Id: If31d094fb989836ab6829daeefe820695032c0ed

    Author: Diogo Ferreira <defer@cyngn.com>
    Date:   Mon Jan 5 18:19:12 2015 +0000

        privacyguard: Add Superuser summary

        Adds superuser summary to the privacy guard "Advanced" menu, this
        is useful for auditing purposes. The tab is only visible when root
        for apps is enabled.

        Change-Id: I0b71c51d10e44e69102c311e526cdb1fde9bda26

    Author: Danesh M <daneshm90@gmail.com>
    Date:   Mon Mar 21 13:56:22 2016 -0700

        Settings : Fix default privacy guard preference

        Ensure we write to the correct table.
        CYNGNOS-2264

        Change-Id: I1260cf665080631e3e2ec19b371a79eee273c6d2

    Author: Lars Greiss <kufikugel@googlemail.com>
    Date:   Sat Apr 25 03:15:15 2015 +0300

        Launch app privacy settings when tapping on PG notification (2/2)

        Based on https://github.com/SlimRoms/packages_apps_Settings/commit/46bb1442aa96aad6890e3ce7b6f3c0466ababf25

        JIRA: CYAN-6077
        Change-Id: I8632e8c944c1d5d7ad2fb2a2276bae5fe2d4a0a0

    Author: Michael Bestas <mikeioannina@gmail.com>
    Date:   Mon Jan 12 00:09:26 2015 +0200

        Update privacy guard reset icon

        Change-Id: Ia636b08fea0d21c0185d053ecf601d1ddcf5a828

    Author: jrizzoli <joey@cyanogenmoditalia.it>
    Date:   Fri Apr 24 15:00:28 2015 +0200

        Settings: update dashboard icons

        * Lockscreen: drawable from quicktoggles
        * Performance: chip
        * Privacy: shield
        * Sounds: speaker

        Change-Id: I227778583d073c1d3fdfb727dcc32c949c535847
        Signed-off-by: jrizzoli <joey@cyanogenmoditalia.it>

    Author: blunden <blunden2@gmail.com>
    Date:   Sat Dec 6 20:18:20 2014 +0100

        Update the Privacy category drawable

        Replace the current ones with new vector drawables

        Change-Id: I27a6778d876672c78469b886e2574baa149aad80

    Author: Diogo Ferreira <defer@cyngn.com>
    Date:   Mon Jan 5 17:56:53 2015 +0000

        PrivacyGuard: Tint the enabled icon

        The enabled icon was white and when enabled, the icon would get
        the exact same color as the background, rendering impossible to see.

        Change-Id: I4dc2b52cfca46abf2eff28a0b25918d42cf39f09

    Author: nickdoherty81 <nickdoh81@gmail.com>
    Date:   Mon Jan 5 00:07:56 2015 -0500

        Check boxes to Switches in PrivacyGuardPerfs

        Change-Id: I329df30a6a095a6a5f5829d8b627b00769e18685

    Author: Diogo Ferreira <defer@cyngn.com>
    Date:   Wed Jan 14 16:06:23 2015 +0000

        appops: Load the app list asynchronously

        The AppList is pretty big and it is loading in the UI thread. This
        is noticeable even on high-end chips and there is a definite possibility
        that it throws an ANR on lower-end ones.

        This patchset adds an asynchronous loader and updates the privacy guard
        to use it.

        Change-Id: I81f3fb64604af07a351f8cbdfffa7454389e2cee

    Author: Adnan Begovic <adnan@cyngn.com>
    Date:   Tue Jan 27 18:11:19 2015 -0800

        Settings: Fix off-by-one SectionIndexer in PrivacyGuard.

        Change-Id: If97876214d6f532ca4e5a09f09d881cd4fbf0231

    Author: Adnan Begovic <adnan@cyngn.com>
    Date:   Wed Jan 28 15:53:35 2015 -0800

        Settings: Fix inflate exception on search. Dynamically replace nested fragment.

           When PrivacyGuard is opened, the parent fragment would inflate the layout
           which contained a nested fragment. This is bad behavior. Since we couldn't
           keep track of the fragments lifecycle, the fragment we instantiated during
           inflation would cause an inflate exception if and when we toggled the search
           view within the current context.

           Mitigate the crash by programmatically replacing the fragment after instantiating it once.

           AndroidRuntime
                  E  FATAL EXCEPTION: main
                  E  Process: com.android.settings, PID: 12372
                  E  android.view.InflateException: Binary XML file line #21: Error inflating class fragment
                  E      at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:763)
                  E      at android.view.LayoutInflater.rInflate(LayoutInflater.java:806)
                  E      at android.view.LayoutInflater.inflate(LayoutInflater.java:504)
                   ...
                  E  Caused by: java.lang.IllegalArgumentException: Binary XML file line #21: Duplicate id 0x7f1001a2, tag nul
                     l, or parent id 0xffffffff with another fragment for com.android.settings.privacyguard.PrivacyGuardPrefs
                  E      at android.app.FragmentManagerImpl.onCreateView(FragmentManager.java:2120)
                  E      at android.view.LayoutInflater$FactoryMerger.onCreateView(LayoutInflater.java:177)
                  E      at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:733)
                  E      ... 25 more

        Change-Id: I6820ad7d35814f150eedf91140e21c0b8e23322b

    Author: Steve Kondik <steve@cyngn.com>
    Date:   Mon Mar 9 16:05:32 2015 +0000

        settings: Use consistent headers for Privacy Guard

         * Show "Privacy Guard" instead of "App ops" in advanced settings

        Change-Id: I98107ba3ad94ba22bbd4dc9e92ea97a36f664ab8

    Author: Matt Garnes <matt@cyngn.com>
    Date:   Fri May 15 15:55:44 2015 -0700

        Do not allow privacy guard for core system apps.

        Hide any applications that have the system UID as well as System UI from
        privacy guard. Enabling this on these core apps can have disastrous
        consequences, since many privacy guard authorization requests will queue
        up. This can cause the system process or System UI to be killed when
        they ANR while they wait at the end of a very long queue for the user to authorize them.

        By using privacy guard, you are trusting that the system will control
        and protect these permissions in the first place; there is no need to protect
        the system from itself.

        Change-Id: I478d6a6783a4c06fa7ad01a96c413290b232636c

    Author: Gianmarco Reverberi <gianmarco.reverberi@gmail.com>
    Date:   Tue Jun 2 19:30:45 2015 +0200

        PrivacyGuard: restore ListView position on resume, for real

        ListView gets reloaded each time the activity is resumed,
        so we have to restore the position after LoadManager finishes its job

        Change-Id: I8f05027aaf8ef85481ecb578efa2c2d2c6c6256d

    Author: Roman Birg <roman@cyngn.com>
    Date:   Wed Sep 9 12:05:38 2015 -0700

        Settings: persist privacy guard dialogs across rotates

        Ref: CYNGNOS-933

        Change-Id: I778ff0152dd4a1c0152dca68e82cc89a41f88508
        Signed-off-by: Roman Birg <roman@cyngn.com>

    Author: Steve Kondik <steve@cyngn.com>
    Date:   Mon Sep 12 01:29:07 2016 -0700

        settings: Fix viewpager tabs not showing on AppOpsSummary

        Change-Id: I311c61559177ea733809f510f017ef613915f3d4

    Author: Gabriele M <moto.falcon.git@gmail.com>
    Date:   Wed Mar 15 22:05:46 2017 +0100

        AppOpsDetails: Check app permissions safely

        checkOp() throws a SecurityException when the application is not
        allowed to perform the given operation. Use  checkOpNoThrow() so
        that no exception is thrown. If the operation is not permitted,
        AppOpsManager.MODE_ERRORED will be returned and AppOpsDetails will
        treat it as MODE_IGNORED (i.e. don't allow).

        BUGBASH-52

        Change-Id: Ic3177a24ae52438594e65cd19e29a86c1ee299e8

    Author: Gabriele M <moto.falcon.git@gmail.com>
    Date: Sun Aug 6 13:08:51 2017 +0200

        Settings: Always show Privacy Guard permissions

        Enabling Privacy Guard for an app simply means switching a set of
        operations to MODE_ASK, independently on whether the application
        actually declared those ops (though a permission) or not. The
        framework keeps track only of the ops with a non-default value. As
        consequence, all the ops set by Privacy Guard that aren't declared
        by the app through its manifest are effectively lost when set to
        their default value and the settings won't show them.

        Never hide the Privacy Guard ops to provide a consistent UI.

        Change-Id: Iafcf058f5e2074982bf45f8c82ef8d027b9358f0

    Author: Gabriele M <moto.falcon.git@gmail.com>
    Date: Fri Sep 1 01:46:30 2017 +0200

        AppOpsState: Hide undeclared Privacy Guard OPs

        Since commit f02e0409eafcccbbaa1efda309946cbbd4f1f51c
        ("Settings: Always show Privacy Guard permissions"), all the Privacy
        Guard OPs are shown independently on whether the application declared
        the associated permission or not. This solved the UI inconsistencies,
        but it's still confusing. Instead of always showing these special OPs,
        hide them, unless unless the application declared the associated
        permission or the OP doesn't have an associated permission.

        Note: if a Privacy Guard OP is not associated to any permission it
        will appear for every application with Privacy Guard enabled,
        bringing back the UI inconsistency solved with f02e0409eafcccbbaa.
        This doesn't happen with the current set of OPs.

        Change-Id: Iddc92b3547187e24140a328d50c5ac09bc1a7ccfa

   Author: Tobias Tefke <tobias.tefke@gmail.com>
   Date: Sun, 11 Mar 2018 17:58:28 +0100

       Privacy Guard: Add icon for VPN permission

       Change-Id: I5f940c1966f9df755bc2643414b34b0303eac0a1

   Author: Tobias Tefke <tobias.tefke@gmail.com>
   Date: Sun, 11 Mar 2018 11:33:37 +0100

       Privacy Guard: Avoid NPE when tinting permission icons

       If PG can't retrieve the icon for a certain permission, a null reference
       is returned. If tint is being set afterwards, a NPE will be thrown.

   Change-Id: I266579ad60e6d0fc3323d07bcd9bcd9c0d4bd990

   Author: Dan Pasanen <dan.pasanen@gmail.com>
   Date: Thu, 15 Mar 2018 20:40:44 -0500

       PrivacyGuard: add a couple more missing icons

       * Add new icon for "Turn on screen" (ic_phone_android from
         https://github.com/google/material-design-icons)

       * Use music note icon for media volume

       Change-Id: I9c8d314906b973319c7aeb7d0d173c7a12925b94

Change-Id: Id810e21d735adcf8fb8c32519828ef9a23f3e684

Conflicts:
	AndroidManifest.xml
	src/com/android/settings/applications/appops/AppOpsCategory.java
	src/com/android/settings/applications/appops/AppOpsDetails.java
	src/com/android/settings/applications/appops/AppOpsState.java
	src/com/android/settings/applications/appops/AppOpsSummary.java

Conflicts:
	res/values/cm_strings.xml
	res/values/lineage_arrays.xml
---
 proguard.flags                                |  2 +
 res/drawable/ic_perm_su.xml                   | 25 ++++++
 res/values/bliss_arrays.xml                   |  5 ++
 res/values/bliss_strings.xml                  |  3 +
 res/xml/security_settings_misc.xml            | 90 +++++++++++++++++++
 .../applications/appops/AppOpsDetails.java    |  9 ++
 .../applications/appops/AppOpsState.java      | 13 ++-
 .../applications/appops/AppOpsSummary.java    | 18 ++--
 .../RootAccessPreferenceController.java       |  7 ++
 9 files changed, 159 insertions(+), 13 deletions(-)
 create mode 100644 res/drawable/ic_perm_su.xml
 create mode 100644 res/xml/security_settings_misc.xml

diff --git a/proguard.flags b/proguard.flags
index 6c85fd2da5..3bd4616635 100644
--- a/proguard.flags
+++ b/proguard.flags
@@ -31,6 +31,8 @@
     *** get*();
 }
 
+-keep class com.android.settings.lineageos.*Settings
+
 # Keep classes that may be inflated from XML.
 -keepclasseswithmembers class * {
     public <init>(android.content.Context, android.util.AttributeSet);
diff --git a/res/drawable/ic_perm_su.xml b/res/drawable/ic_perm_su.xml
new file mode 100644
index 0000000000..0ae4ef2007
--- /dev/null
+++ b/res/drawable/ic_perm_su.xml
@@ -0,0 +1,25 @@
+<!--
+    Copyright (C) 2016 The Android Open Source Project
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+         http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24.0dp"
+        android:height="24.0dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0"
+        android:tint="#FF000000">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M12.49,15.934h-2.373L9.24,21H6.966l0.89-5.066H5.051v-2.089h3.163l0.63-3.584H5.977V8.148h3.238 l0.902-5.141h2.261l-0.902,5.141h2.373l0.914-5.141h2.261l-0.902,5.141h2.719v2.113h-3.089l-0.63,3.584h2.78v2.089h-3.139L13.874,21 H11.6L12.49,15.934Z M10.488,13.845h2.36l0.63-3.584h-2.373L10.488,13.845z"/>
+</vector>
diff --git a/res/values/bliss_arrays.xml b/res/values/bliss_arrays.xml
index fe9edbe186..22bf570878 100644
--- a/res/values/bliss_arrays.xml
+++ b/res/values/bliss_arrays.xml
@@ -49,6 +49,7 @@
         <item>@string/app_ops_categories_device</item>
         <item>@string/app_ops_categories_run_in_background</item>
         <item>@string/app_ops_categories_bootup</item>
+        <item>@string/app_ops_categories_su</item>
         <item>@string/app_ops_categories_other</item>
     </string-array>
 
@@ -218,6 +219,8 @@
         <item>@string/app_ops_summaries_toggle_nfc</item>
         <!-- OP_DATA_CONNECT_CHANGE -->
         <item>@string/app_ops_summaries_toggle_mobile_data</item>
+        <!-- OP_SU -->
+        <item>@string/app_ops_summaries_su</item>
     </string-array>
 
     <!-- User display names for app ops codes - extension of AOSP -->
@@ -386,6 +389,8 @@
         <item>@string/app_ops_labels_toggle_nfc</item>
         <!-- OP_DATA_CONNECT_CHANGE -->
         <item>@string/app_ops_labels_toggle_mobile_data</item>
+        <!-- OP_SU -->
+        <item>@string/app_ops_labels_su</item>
     </string-array>
 
     <!-- App ops permissions -->
diff --git a/res/values/bliss_strings.xml b/res/values/bliss_strings.xml
index 24b944ec8e..50e5b06683 100644
--- a/res/values/bliss_strings.xml
+++ b/res/values/bliss_strings.xml
@@ -202,6 +202,7 @@
     <string name="app_ops_categories_device">Device</string>
     <string name="app_ops_categories_run_in_background">Run in background</string>
     <string name="app_ops_categories_bootup">Bootup</string>
+    <string name="app_ops_categories_su">Root access</string>
     <string name="app_ops_categories_other">Other</string>
     <string name="misc_title">Miscellaneous</string>
 
@@ -269,6 +270,7 @@
     <string name="app_ops_summaries_send_sms">send SMS</string>
     <string name="app_ops_summaries_start_at_bootup">start at power up</string>
     <string name="app_ops_summaries_start_foreground">start foreground</string>
+    <string name="app_ops_summaries_su">get root access</string>
     <string name="app_ops_summaries_toast_window">display toasts</string>
     <string name="app_ops_summaries_toggle_bluetooth">toggle Bluetooth</string>
     <string name="app_ops_summaries_toggle_mobile_data">toggle cellular data</string>
@@ -356,6 +358,7 @@
     <string name="app_ops_labels_send_sms">Send SMS</string>
     <string name="app_ops_labels_start_at_bootup">Start at power up</string>
     <string name="app_ops_labels_start_foreground">Start foreground</string>
+    <string name="app_ops_labels_su">Get root access</string>
     <string name="app_ops_labels_toast_window">Display toasts</string>
     <string name="app_ops_labels_toggle_bluetooth">Toggle Bluetooth</string>
     <string name="app_ops_labels_toggle_mobile_data">Toggle cellular data</string>
diff --git a/res/xml/security_settings_misc.xml b/res/xml/security_settings_misc.xml
new file mode 100644
index 0000000000..7234bbced1
--- /dev/null
+++ b/res/xml/security_settings_misc.xml
@@ -0,0 +1,90 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2011 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:lineage="http://schemas.android.com/apk/res/lineageos.platform"
+        android:title="@string/security_settings_title">
+
+    <PreferenceCategory android:title="@string/security_passwords_title"
+            android:persistent="false">
+
+        <!-- Privacy Guard -->
+        <org.lineageos.internal.lineageparts.LineagePartsPreference
+            android:key="privacy_guard_manager" />
+
+        <Preference
+            android:key="location"
+            android:title="@string/location_settings_title"
+            android:fragment="com.android.settings.location.LocationSettings">
+        </Preference>
+
+        <SwitchPreference
+            android:key="show_password"
+            android:title="@string/show_password"
+            android:summary="@string/show_password_summary"/>
+
+    </PreferenceCategory>
+
+    <PreferenceCategory>
+
+        <Preference android:key="manage_device_admin"
+                android:title="@string/manage_device_admin"
+                android:persistent="false"
+                android:fragment="com.android.settings.DeviceAdminSettings"/>
+
+        <Preference android:key="enterprise_privacy"
+                android:title="@string/enterprise_privacy_settings"
+                android:persistent="false"
+                android:fragment="com.android.settings.enterprise.EnterprisePrivacySettings"/>
+
+    </PreferenceCategory>
+
+    <Preference android:key="sim_lock_settings"
+        android:title="@string/sim_lock_settings_category"
+        android:persistent="false">
+
+        <intent android:action="android.intent.action.MAIN"
+            android:targetPackage="com.android.settings"
+            android:targetClass="com.android.settings.Settings$IccLockSettingsActivity"/>
+
+    </Preference>
+
+    <Preference
+        android:key="encryption_and_credential"
+        android:title="@string/encryption_and_credential_settings_title"
+        android:summary="@string/encryption_and_credential_settings_summary"
+        android:fragment="com.android.settings.EncryptionAndCredential"/>
+
+    <Preference android:key="manage_trust_agents"
+        android:title="@string/manage_trust_agents"
+        android:persistent="false"
+        android:fragment="com.android.settings.TrustAgentSettings"/>
+
+    <Preference
+        android:key="screen_pinning_settings"
+        android:title="@string/screen_pinning_title"
+        android:summary="@string/switch_off_text"
+        android:fragment="com.android.settings.ScreenPinningSettings"/>
+
+    <Preference android:key="usage_access"
+        android:title="@string/usage_access_title"
+        android:fragment="com.android.settings.applications.ManageApplications">
+        <extra
+            android:name="classname"
+            android:value="com.android.settings.Settings$UsageAccessSettingsActivity" />
+    </Preference>
+
+</PreferenceScreen>
diff --git a/src/com/android/settings/applications/appops/AppOpsDetails.java b/src/com/android/settings/applications/appops/AppOpsDetails.java
index 1e8d2e7601..72bc38f4a9 100644
--- a/src/com/android/settings/applications/appops/AppOpsDetails.java
+++ b/src/com/android/settings/applications/appops/AppOpsDetails.java
@@ -115,6 +115,7 @@ public class AppOpsDetails extends SettingsPreferenceFragment {
         OP_ICONS.put(AppOpsManager.OP_POST_NOTIFICATION, R.drawable.ic_perm_notifications);
         OP_ICONS.put(AppOpsManager.OP_READ_CLIPBOARD, R.drawable.ic_perm_clipboard);
         OP_ICONS.put(AppOpsManager.OP_RUN_IN_BACKGROUND, R.drawable.ic_perm_background);
+        OP_ICONS.put(AppOpsManager.OP_SU, R.drawable.ic_perm_su);
         OP_ICONS.put(AppOpsManager.OP_SYSTEM_ALERT_WINDOW, R.drawable.ic_perm_drawontop);
         OP_ICONS.put(AppOpsManager.OP_TAKE_AUDIO_FOCUS, R.drawable.ic_perm_audio);
         OP_ICONS.put(AppOpsManager.OP_TOAST_WINDOW, R.drawable.ic_perm_notifications);
@@ -235,6 +236,14 @@ public class AppOpsDetails extends SettingsPreferenceFragment {
     }
 
     private AppOpsState.OpsTemplate[] getTemplates() {
+        /* If we are platform signed, only show the root switch, this
+         * one is safe to toggle while other permission-based ones could
+         * certainly cause system-wide problems
+         */
+        if (isPlatformSigned()) {
+            return new AppOpsState.OpsTemplate[]{ AppOpsState.SU_TEMPLATE };
+        }
+
         int length = AppOpsState.ALL_PERMS_TEMPLATES.length;
         AppOpsState.OpsTemplate[] allTemplates = new AppOpsState.OpsTemplate[length];
         // Loop all existing templates and set the visibility of each perm to true
diff --git a/src/com/android/settings/applications/appops/AppOpsState.java b/src/com/android/settings/applications/appops/AppOpsState.java
index 816c7513dd..7684c4629e 100644
--- a/src/com/android/settings/applications/appops/AppOpsState.java
+++ b/src/com/android/settings/applications/appops/AppOpsState.java
@@ -63,8 +63,8 @@ public class AppOpsState {
         mContext = context;
         mAppOps = (AppOpsManager)context.getSystemService(Context.APP_OPS_SERVICE);
         mPm = context.getPackageManager();
-        mOpSummaries = context.getResources().getTextArray(R.array.app_ops_summaries_bliss);
-        mOpLabels = context.getResources().getTextArray(R.array.app_ops_labels_bliss);
+        mOpSummaries = context.getResources().getTextArray(R.array.app_ops_summaries_lineage);
+        mOpLabels = context.getResources().getTextArray(R.array.app_ops_labels_lineage);
         mPreferences = context.getSharedPreferences("appops_manager", Activity.MODE_PRIVATE);
     }
 
@@ -235,6 +235,11 @@ public class AppOpsState {
             new boolean[] { true }
             );
 
+    public static final OpsTemplate SU_TEMPLATE = new OpsTemplate(
+            new int[] { AppOpsManager.OP_SU },
+            new boolean[] { false }
+            );
+
     // this template should contain all ops which are not part of any other template in
     // ALL_TEMPLATES
     public static final OpsTemplate REMAINING_TEMPLATE = new OpsTemplate(
@@ -273,14 +278,14 @@ public class AppOpsState {
     public static final OpsTemplate[] ALL_TEMPLATES = new OpsTemplate[] {
             LOCATION_TEMPLATE, PERSONAL_TEMPLATE, MESSAGING_TEMPLATE,
             MEDIA_TEMPLATE, DEVICE_TEMPLATE, RUN_IN_BACKGROUND_TEMPLATE,
-            BOOTUP_TEMPLATE
+            BOOTUP_TEMPLATE, SU_TEMPLATE
     };
 
     // this template contains all permissions grouped by templates
     public static final OpsTemplate[] ALL_PERMS_TEMPLATES = new OpsTemplate[] {
             LOCATION_TEMPLATE, PERSONAL_TEMPLATE, MESSAGING_TEMPLATE,
             MEDIA_TEMPLATE, DEVICE_TEMPLATE, RUN_IN_BACKGROUND_TEMPLATE,
-            BOOTUP_TEMPLATE, REMAINING_TEMPLATE
+            BOOTUP_TEMPLATE, SU_TEMPLATE, REMAINING_TEMPLATE
     };
 
     /**
diff --git a/src/com/android/settings/applications/appops/AppOpsSummary.java b/src/com/android/settings/applications/appops/AppOpsSummary.java
index 5e18fdce39..be1e9d61d2 100644
--- a/src/com/android/settings/applications/appops/AppOpsSummary.java
+++ b/src/com/android/settings/applications/appops/AppOpsSummary.java
@@ -47,6 +47,7 @@ import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 
+import com.android.settings.development.RootAccessPreferenceController;
 import com.android.settings.R;
 
 public class AppOpsSummary extends InstrumentedPreferenceFragment {
@@ -132,7 +133,7 @@ public class AppOpsSummary extends InstrumentedPreferenceFragment {
         mContentContainer = container;
         mRootView = rootView;
 
-        CharSequence[] pageNames = getResources().getTextArray(R.array.app_ops_categories_bliss);
+        CharSequence[] pageNames = getResources().getTextArray(R.array.app_ops_categories_lineage);
         AppOpsState.OpsTemplate[] templates = AppOpsState.ALL_PERMS_TEMPLATES;
         assert(pageNames.length == templates.length);
 
@@ -163,8 +164,6 @@ public class AppOpsSummary extends InstrumentedPreferenceFragment {
         final int colorAccent = getContext().getColor(typedValue.resourceId);
         tabs.setTabIndicatorColor(colorAccent);
 
-        getActivity().setTitle(R.string.app_ops_settings);
-
         // We have to do this now because PreferenceFrameLayout looks at it
         // only when the view is added.
         if (container instanceof PreferenceFrameLayout) {
@@ -176,17 +175,18 @@ public class AppOpsSummary extends InstrumentedPreferenceFragment {
         return rootView;
     }
 
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-        getActivity().setTitle(R.string.misc_title);
-    }
-
     private void filterPageData(List<Pair<CharSequence, AppOpsState.OpsTemplate>> data, int tab) {
         if (tab >= 0 && tab < data.size()) {
             Pair<CharSequence, AppOpsState.OpsTemplate> item = data.get(tab);
             data.clear();
             data.add(item);
+        } else if (!RootAccessPreferenceController.isRootForAppsEnabled()) {
+            for (Pair<CharSequence, AppOpsState.OpsTemplate> item : data) {
+                if (item.second == AppOpsState.SU_TEMPLATE) {
+                    data.remove(item);
+                    return;
+                }
+            }
         }
     }
 
diff --git a/src/com/android/settings/development/RootAccessPreferenceController.java b/src/com/android/settings/development/RootAccessPreferenceController.java
index 4db32ccf6c..7e40e92ba7 100644
--- a/src/com/android/settings/development/RootAccessPreferenceController.java
+++ b/src/com/android/settings/development/RootAccessPreferenceController.java
@@ -108,6 +108,13 @@ public class RootAccessPreferenceController extends DeveloperOptionsPreferenceCo
         updatePreference();
     }
 
+    public static boolean isRootForAppsEnabled() {
+        int value = SystemProperties.getInt(ROOT_ACCESS_PROPERTY, 0);
+        boolean daemonState =
+                SystemProperties.get("init.svc.su_daemon", "absent").equals("running");
+        return daemonState && (value == 1 || value == 3);
+    }
+
     private void writeRootAccessOptions(Object newValue) {
         String oldValue = SystemProperties.get(ROOT_ACCESS_PROPERTY, "0");
         SystemProperties.set(ROOT_ACCESS_PROPERTY, newValue.toString());
-- 
2.17.1

